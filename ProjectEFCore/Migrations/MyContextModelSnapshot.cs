// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectEFCore.Context;

#nullable disable

namespace ProjectEFCore.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectEFCore.Models.Course", b =>
                {
                    b.Property<int>("Crs_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Crs_Id"));

                    b.Property<int?>("Course_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Course_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("dept_Id")
                        .HasColumnType("int");

                    b.Property<int>("ins_Id")
                        .HasColumnType("int");

                    b.HasKey("Crs_Id");

                    b.HasIndex("dept_Id");

                    b.HasIndex("ins_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ProjectEFCore.Models.CourseSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ins_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Course_Id");

                    b.HasIndex("Ins_Id");

                    b.ToTable("CoursesSessions");
                });

            modelBuilder.Entity("ProjectEFCore.Models.CourseSessionAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseSession_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("St_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseSession_Id");

                    b.HasIndex("St_Id");

                    b.ToTable("CoursesSessionAttendances");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Course_Student", b =>
                {
                    b.Property<int>("St_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.HasKey("St_Id", "Course_Id");

                    b.HasIndex("Course_Id");

                    b.ToTable("Courses_Students");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Department", b =>
                {
                    b.Property<int>("Dept_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dept_Id"));

                    b.Property<string>("Dept_Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Dept_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Manager_Id")
                        .HasColumnType("int");

                    b.HasKey("Dept_Id");

                    b.HasIndex("Manager_Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Instructor", b =>
                {
                    b.Property<int>("Ins_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ins_Id"));

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ins_FName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ins_LName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Ins_Id");

                    b.HasIndex("Dept_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Student", b =>
                {
                    b.Property<int>("St_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("St_Id"));

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("St_FName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("St_LName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("St_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ProjectEFCore.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Img")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Course", b =>
                {
                    b.HasOne("ProjectEFCore.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("dept_Id");

                    b.HasOne("ProjectEFCore.Models.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("ins_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Department");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ProjectEFCore.Models.CourseSession", b =>
                {
                    b.HasOne("ProjectEFCore.Models.Course", "Course")
                        .WithMany("CourseSessions")
                        .HasForeignKey("Course_Id");

                    b.HasOne("ProjectEFCore.Models.Instructor", "Instructor")
                        .WithMany("CourseSessions")
                        .HasForeignKey("Ins_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ProjectEFCore.Models.CourseSessionAttendance", b =>
                {
                    b.HasOne("ProjectEFCore.Models.CourseSession", "CourseSession")
                        .WithMany("CourseSessionAttendances")
                        .HasForeignKey("CourseSession_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ProjectEFCore.Models.Student", "Student")
                        .WithMany("CourseSessionAttendances")
                        .HasForeignKey("St_Id");

                    b.Navigation("CourseSession");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Course_Student", b =>
                {
                    b.HasOne("ProjectEFCore.Models.Course", "Course")
                        .WithMany("Course_Students")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectEFCore.Models.Student", "Student")
                        .WithMany("Course_Students")
                        .HasForeignKey("St_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Department", b =>
                {
                    b.HasOne("ProjectEFCore.Models.Instructor", "Manager")
                        .WithMany()
                        .HasForeignKey("Manager_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Instructor", b =>
                {
                    b.HasOne("ProjectEFCore.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("Dept_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Course", b =>
                {
                    b.Navigation("CourseSessions");

                    b.Navigation("Course_Students");
                });

            modelBuilder.Entity("ProjectEFCore.Models.CourseSession", b =>
                {
                    b.Navigation("CourseSessionAttendances");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Instructor", b =>
                {
                    b.Navigation("CourseSessions");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ProjectEFCore.Models.Student", b =>
                {
                    b.Navigation("CourseSessionAttendances");

                    b.Navigation("Course_Students");
                });
#pragma warning restore 612, 618
        }
    }
}
